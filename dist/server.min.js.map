{"version":3,"sources":["server.js"],"names":["express","require","http","dotenv","fileUpload","app","server","createServer","bodyParser","use","origin","config","cors","corsOptions","json","limit","urlencoded","extended","db","url","useNewUrlParser","useUnifiedTopology","then","console","log","err","process","exit","req","res","message","PORT","env","listen"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QADfD,KAAOC,QAAU,QAGjBE,OAASF,QAAQ,UAFjBC,WAAeD,QAArB,eAIMG,WAAaH,QAAQ,sBAErBI,IAAML,UAENM,OAASJ,KAAKK,aAAaF,KALjCA,IAAMG,IAAAA,cAONP,QAAQ,qBAARA,CAA8BK,QAD9BD,IAAII,YAAc,CAOhBC,OAAQ,KAEVP,OAAOQ,SACPN,IAAII,IAAIG,KAAKC,cAJbR,IAAIQ,IAAAA,WAAcC,KAAA,CAAAC,MAAA,UAChBL,IAAAA,IAAMF,WAAEQ,WAAA,CAAAD,MAAA,OAAAE,UAAA,KAEVd,IAAAA,IAAOQ,QAAPG,QAEyBC,IAAAA,IAAKf,QAAEgB,WAAA,CAAAC,UAAA,KAChCZ,IAAII,GAAID,QAAWQ,gBAAYD,GAAAA,SAAeE,QAAQC,GAAEC,IAAA,CAUpDC,iBATJ,EAUIC,oBAAoB,IAPxBC,KAAA,WAUIC,QAAQC,IAAI,gCAdeT,MAKFE,SAAAA,GAA7BM,QAAAC,IAAA,kCAAAC,GAaIC,QAAQC,SATOtB,IAIhBiB,IAAK,QAAA,SAAAM,EAAMC,GACVN,EAAAA,KAAQC,CAARM,QAAY,uCAIZJ,QAAAA,2BAAAA,CAAArB,KACDJ,QAIH,6BAJGA,CAIHI,KAOAJ,QAAQ,iCAARA,CAA0CI,KAN1CA,QAAQ,2BAARA,CAAiBA,KACfwB,QAAIf,8BAAJe,CAASxB,KAWX,IAAM0B,KAAOL,QAAQM,IAAID,MAAQ,IAEjCzB,OAAO2B,OAAOF,KAAM,WATpB9B,QAAQuB,IAARvB,6BAAAA,OAAA8B,KAAA9B","file":"server.min.js","sourcesContent":["const express = require(\"express\");\r\nconst http = require('http');\r\nconst cors = require(\"cors\");\r\nconst dotenv = require(\"dotenv\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst fileUpload = require('express-fileupload');\r\n\r\nconst app = express();\r\n\r\nconst server = http.createServer(app);\r\napp.use(fileUpload());\r\nrequire(\"./app/socketServer\")(server);\r\n// require(\"./app/walletavatar\")\r\n\r\n\r\n\r\nvar corsOptions = {\r\n  origin: \"*\"  \r\n};\r\ndotenv.config();\r\napp.use(cors(corsOptions));\r\napp.use(bodyParser.json({limit: '50mb'}));\r\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}));\r\n// parse requests of content-type - application/json\r\napp.use(express.json());\r\n// mongoose.connect(\"mongodb://localhost/phantom-avatars\", { useNewUrlParser: true, useUnifiedTopology: true });\r\n// parse requests of content-type - application/x-www-form-urlencoded\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\nconst db = require(\"./app/models\");\r\ndb.mongoose\r\n  .connect(db.url, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n  })\r\n  .then(() => {\r\n    console.log(\"Connected to the database!\");\r\n  })\r\n  .catch(err => {\r\n    console.log(\"Cannot connect to the database!\", err);\r\n    process.exit();\r\n  });\r\n\r\n\r\n\r\n// simple route\r\napp.get(\"/test\", (req, res) => {\r\n  res.json({ message: \"Welcome to bezkoder application.\" });\r\n});\r\n\r\nrequire(\"./app/routes/user.routes\")(app);\r\nrequire(\"./app/routes/ticket.routes\")(app);\r\nrequire(\"./app/routes/buyTickets.routes\")(app);\r\nrequire(\"./app/routes/chat.routes\")(app);\r\nrequire(\"./app/routes/clinical.route\")(app);\r\n// require(\"./app/routes/image.routes\")(app);\r\n\r\n// set port, listen for requests\r\nconst PORT = process.env.PORT || 5000;\r\n// const HOST = \"0.0.0.0\";\r\nserver.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}.`);\r\n});\r\n\r\n"]}