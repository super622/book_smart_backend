"use strict";var jwtEncode=require("jwt-encode"),db=require("../models"),_require=require("../utils/verifyToken"),setToken=_require.setToken,_require2=require("mongoose"),set=_require2.set,Job=db.jobs,limitAccNum=100,expirationTime=600;exports.postJob=function(r,t){var s,n,o,a,u,i,l,c,g;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,console.log("register"),e.next=4,regeneratorRuntime.awrap(Job.find().sort({jobId:-1}).limit(1));case 4:return s=e.sent,n=0<s.length?s[0].jobId:0,o=n+1,a=r.body,u=r.user,console.log("new Id-------------\x3e",o),e.next=12,regeneratorRuntime.awrap(Job.findOne({jobId:o}));case 12:if(i=e.sent,console.log(i),i){e.next=26;break}return a.entryDate=new Date,a.jobId=o,l=new Job(a),e.next=20,regeneratorRuntime.awrap(l.save());case 20:c={email:u.email,userRole:u.userRole,iat:Math.floor(Date.now()/1e3),exp:Math.floor(Date.now()/1e3)+expirationTime},g=setToken(c),console.log(g),t.status(201).json({message:"Successfully Registered",token:g}),e.next=27;break;case 26:t.status(409).json({message:"The Email is already registered"});case 27:e.next=33;break;case 29:return e.prev=29,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",t.status(500).json({message:"An Error Occured!"}));case 33:case"end":return e.stop()}},null,null,[[0,29]])},exports.shifts=function(r,t){var s,n,o,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,console.log("LogIn"),s=r.user,e.next=5,regeneratorRuntime.awrap(Job.find({}));case 5:if(!(n=e.sent)){e.next=20;break}if(o={email:s.email,userRole:s.userRole,iat:Math.floor(Date.now()/1e3),exp:Math.floor(Date.now()/1e3)+expirationTime},a=setToken(o),console.log(a),a)return e.next=13,regeneratorRuntime.awrap(Job.updateOne({email:email,userRole:userRole},{$set:{logined:!0}}));e.next=17;break;case 13:e.sent,t.status(200).json({message:"Successfully Get!",Data:n,token:a,user:s}),e.next=18;break;case 17:t.status(400).json({message:"Cannot logined User!"});case 18:e.next=21;break;case 20:t.status(404).json({message:"User Not Found! Please Register First."});case 21:e.next=27;break;case 23:return e.prev=23,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",t.status(500).json({message:"An Error Occured!"}));case 27:case"end":return e.stop()}},null,null,[[0,23]])};
//# sourceMappingURL=job.controller.min.js.map
