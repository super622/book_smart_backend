"use strict";var jwtEncode=require("jwt-encode"),db=require("../models"),_require=require("../utils/verifyToken"),setToken=_require.setToken,_require2=require("mongoose"),set=_require2.set,Clinical=db.clinical,limitAccNum=100,expirationTime=600;exports.signup=function(n,r){var t,s,o,a,l;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,console.log("regiester"),t=n.body,e.next=5,regeneratorRuntime.awrap(Clinical.findOne({email:t.email}));case 5:if(s=e.sent,console.log(s),s){e.next=18;break}return t.entryDate=new Date,o=new Clinical(t),e.next=12,regeneratorRuntime.awrap(o.save());case 12:a={email:t.email,userRole:t.userRole,iat:Math.floor(Date.now()/1e3),exp:Math.floor(Date.now()/1e3)+expirationTime},l=setToken(a),console.log(l),r.status(201).json({message:"Successfully Regisetered",token:l}),e.next=19;break;case 18:r.status(409).json({message:"The Email is already registered"});case 19:e.next=25;break;case 21:return e.prev=21,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",r.status(500).json({message:"An Error Occured!"}));case 25:case"end":return e.stop()}},null,null,[[0,21]])},exports.login=function(n,r){var t,s,o,a,l,i,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,console.log("LogIn"),t=n.body,s=t.email,o=t.password,a=t.userRole,e.next=5,regeneratorRuntime.awrap(Clinical.findOne({email:s,password:o,userRole:a}));case 5:if(!(l=e.sent)){e.next=20;break}if(i={email:l.email,userRole:l.userRole,iat:Math.floor(Date.now()/1e3),exp:Math.floor(Date.now()/1e3)+expirationTime},u=setToken(i),console.log(u),u)return e.next=13,regeneratorRuntime.awrap(Clinical.updateOne({email:s,userRole:a},{$set:{logined:!0}}));e.next=17;break;case 13:e.sent,r.status(200).json({message:"Successfully Logined!",token:u,user:l}),e.next=18;break;case 17:r.status(400).json({message:"Cannot logined User!"});case 18:e.next=21;break;case 20:r.status(404).json({message:"User Not Found! Please Register First."});case 21:e.next=27;break;case 23:return e.prev=23,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",r.status(500).json({message:"An Error Occured!"}));case 27:case"end":return e.stop()}},null,null,[[0,23]])},exports.Update=function(n,s){var r,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:console.log("updateSignal"),r=n.body,(o=n.user)&&(console.log("items"),Clinical.findOneAndUpdate({user:o},{$set:r},{new:!1},function(e,n){if(e)s.status(500).json({error:e}),console.log(e);else{console.log("updated",n);var r={email:o.email,userRole:o.userRole,iat:Math.floor(Date.now()/1e3),exp:Math.floor(Date.now()/1e3)+expirationTime},t=setToken(r);console.log(t),s.status(200).json({message:"Trading Signals saved Successfully",token:t,user:n})}}));case 4:case"end":return e.stop()}})},exports.logout=function(n,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,console.log("Logout"),t=n.body,e.next=5,regeneratorRuntime.awrap(Auth.updateOne({accountId:accountId},{$set:{logined:!1}}));case 5:e.sent,r.status(200).json({email:t,logined:logined}),e.next=13;break;case 9:return e.prev=9,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",r.status(500).json({message:"An Error Occured!"}));case 13:case"end":return e.stop()}},null,null,[[0,9]])};
//# sourceMappingURL=clinical.controller.min.js.map
